{"version":3,"file":"clientDefinitions.js","sourceRoot":"","sources":["../../src/clientDefinitions.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AnalyzeTextParameters,\n  AnalyzeImageParameters,\n  GetTextBlocklistParameters,\n  CreateOrUpdateTextBlocklistParameters,\n  DeleteTextBlocklistParameters,\n  ListTextBlocklistsParameters,\n  AddOrUpdateBlocklistItemsParameters,\n  RemoveBlocklistItemsParameters,\n  GetTextBlocklistItemParameters,\n  ListTextBlocklistItemsParameters,\n} from \"./parameters\";\nimport {\n  AnalyzeText200Response,\n  AnalyzeTextDefaultResponse,\n  AnalyzeImage200Response,\n  AnalyzeImageDefaultResponse,\n  GetTextBlocklist200Response,\n  GetTextBlocklistDefaultResponse,\n  CreateOrUpdateTextBlocklist200Response,\n  CreateOrUpdateTextBlocklist201Response,\n  CreateOrUpdateTextBlocklistDefaultResponse,\n  DeleteTextBlocklist204Response,\n  DeleteTextBlocklistDefaultResponse,\n  ListTextBlocklists200Response,\n  ListTextBlocklistsDefaultResponse,\n  AddOrUpdateBlocklistItems200Response,\n  AddOrUpdateBlocklistItemsDefaultResponse,\n  RemoveBlocklistItems204Response,\n  RemoveBlocklistItemsDefaultResponse,\n  GetTextBlocklistItem200Response,\n  GetTextBlocklistItemDefaultResponse,\n  ListTextBlocklistItems200Response,\n  ListTextBlocklistItemsDefaultResponse,\n} from \"./responses\";\nimport { Client, StreamableMethod } from \"@azure-rest/core-client\";\n\nexport interface AnalyzeText {\n  /** A synchronous API for the analysis of potentially harmful text content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence. */\n  post(\n    options: AnalyzeTextParameters\n  ): StreamableMethod<AnalyzeText200Response | AnalyzeTextDefaultResponse>;\n}\n\nexport interface AnalyzeImage {\n  /** A synchronous API for the analysis of potentially harmful image content. Currently, it supports four categories: Hate, SelfHarm, Sexual, and Violence. */\n  post(\n    options: AnalyzeImageParameters\n  ): StreamableMethod<AnalyzeImage200Response | AnalyzeImageDefaultResponse>;\n}\n\nexport interface GetTextBlocklist {\n  /** Returns text blocklist details. */\n  get(\n    options?: GetTextBlocklistParameters\n  ): StreamableMethod<GetTextBlocklist200Response | GetTextBlocklistDefaultResponse>;\n  /** Updates a text blocklist. If the blocklistName does not exist, a new blocklist will be created. */\n  patch(\n    options: CreateOrUpdateTextBlocklistParameters\n  ): StreamableMethod<\n    | CreateOrUpdateTextBlocklist200Response\n    | CreateOrUpdateTextBlocklist201Response\n    | CreateOrUpdateTextBlocklistDefaultResponse\n  >;\n  /** Deletes a text blocklist. */\n  delete(\n    options?: DeleteTextBlocklistParameters\n  ): StreamableMethod<DeleteTextBlocklist204Response | DeleteTextBlocklistDefaultResponse>;\n}\n\nexport interface ListTextBlocklists {\n  /** Get all text blocklists details. */\n  get(\n    options?: ListTextBlocklistsParameters\n  ): StreamableMethod<ListTextBlocklists200Response | ListTextBlocklistsDefaultResponse>;\n}\n\nexport interface AddOrUpdateBlocklistItems {\n  /** Add or update blocklistItems to a text blocklist. You can add or update at most 100 blocklistItems in one request. */\n  post(\n    options: AddOrUpdateBlocklistItemsParameters\n  ): StreamableMethod<\n    AddOrUpdateBlocklistItems200Response | AddOrUpdateBlocklistItemsDefaultResponse\n  >;\n}\n\nexport interface RemoveBlocklistItems {\n  /** Remove blocklistItems from a text blocklist. You can remove at most 100 BlocklistItems in one request. */\n  post(\n    options: RemoveBlocklistItemsParameters\n  ): StreamableMethod<RemoveBlocklistItems204Response | RemoveBlocklistItemsDefaultResponse>;\n}\n\nexport interface GetTextBlocklistItem {\n  /** Get blocklistItem by blocklistName and blocklistItemId from a text blocklist. */\n  get(\n    options?: GetTextBlocklistItemParameters\n  ): StreamableMethod<GetTextBlocklistItem200Response | GetTextBlocklistItemDefaultResponse>;\n}\n\nexport interface ListTextBlocklistItems {\n  /** Get all blocklistItems in a text blocklist. */\n  get(\n    options?: ListTextBlocklistItemsParameters\n  ): StreamableMethod<ListTextBlocklistItems200Response | ListTextBlocklistItemsDefaultResponse>;\n}\n\nexport interface Routes {\n  /** Resource for '/text:analyze' has methods for the following verbs: post */\n  (path: \"/text:analyze\"): AnalyzeText;\n  /** Resource for '/image:analyze' has methods for the following verbs: post */\n  (path: \"/image:analyze\"): AnalyzeImage;\n  /** Resource for '/text/blocklists/\\{blocklistName\\}' has methods for the following verbs: get, patch, delete */\n  (path: \"/text/blocklists/{blocklistName}\", blocklistName: string): GetTextBlocklist;\n  /** Resource for '/text/blocklists' has methods for the following verbs: get */\n  (path: \"/text/blocklists\"): ListTextBlocklists;\n  /** Resource for '/text/blocklists/\\{blocklistName\\}:addOrUpdateBlocklistItems' has methods for the following verbs: post */\n  (\n    path: \"/text/blocklists/{blocklistName}:addOrUpdateBlocklistItems\",\n    blocklistName: string\n  ): AddOrUpdateBlocklistItems;\n  /** Resource for '/text/blocklists/\\{blocklistName\\}:removeBlocklistItems' has methods for the following verbs: post */\n  (\n    path: \"/text/blocklists/{blocklistName}:removeBlocklistItems\",\n    blocklistName: string\n  ): RemoveBlocklistItems;\n  /** Resource for '/text/blocklists/\\{blocklistName\\}/blocklistItems/\\{blocklistItemId\\}' has methods for the following verbs: get */\n  (\n    path: \"/text/blocklists/{blocklistName}/blocklistItems/{blocklistItemId}\",\n    blocklistName: string,\n    blocklistItemId: string\n  ): GetTextBlocklistItem;\n  /** Resource for '/text/blocklists/\\{blocklistName\\}/blocklistItems' has methods for the following verbs: get */\n  (\n    path: \"/text/blocklists/{blocklistName}/blocklistItems\",\n    blocklistName: string\n  ): ListTextBlocklistItems;\n}\n\nexport type ContentSafetyClient = Client & {\n  path: Routes;\n};\n"]}